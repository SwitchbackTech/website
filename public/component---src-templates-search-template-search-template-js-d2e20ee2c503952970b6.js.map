{"version":3,"sources":["webpack:///./src/templates/search-template/search-template.stc.js","webpack:///./src/templates/search-template/search-template.js","webpack:///./src/components/blog/layout-two/blog.stc.js","webpack:///./src/components/blog/layout-two/index.js"],"names":["SectionWrap","styled","section","device","small","medium","PageHeader","div","BlogListWrap","SidebarWrap","aside","WidgetBoxWrap","SearchTemplate","data","location","pageContext","restProps","blogs","allMarkdownRemark","edges","headingCSS","textCSS","blogStyle","state","query","filteredBlogs","filter","post","node","frontmatter","title","quote_text","quote_author","category","tags","authorName","author","name","html","toLowerCase","includes","join","className","Container","Row","Col","xl","length","map","blog","key","fields","slug","content","excerpt","defaultProps","mb","mt","as","color","BlogWrapper","article","space","BlogInner","BlogMedia","large","BlogContent","BlogHeader","header","BlogTitle","h3","BlogMetaWrap","BlogExcerpt","p","BlogFooter","footer","Blog","video_id","video_channel","dateSlug","date","format","image","postID","video_link","link","images","btnStyle","categoryStyle","restStyles","split","useState","videoOpen","setVideoOpen","path","onClick","poster","childImageSharp","fluid","text","slugify","to","id","icon","channel","videoId","isOpen","onClose","varient"],"mappings":"0cAIaA,EAAcC,IAAOC,QAAV,sFAAGD,CAAH,+HAGlBE,IAAOC,MAIPD,IAAOE,QAMAC,EAAaL,IAAOM,IAAV,qFAAGN,CAAH,yBAIVO,EAAeP,IAAOM,IAAV,uFAAGN,CAAH,MAEZQ,EAAcR,IAAOS,MAAV,sFAAGT,CAAH,iDAClBU,K,sCCLN,IAAMC,EAAiB,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,KAAmBC,GAA6B,EAA1CC,YAA0C,EAA7BD,UAAaE,E,oIAAgB,sCAChEC,EAAQJ,EAAKK,kBAAkBC,OAAS,GACtCC,EAAmCJ,EAAnCI,WAAYC,EAAuBL,EAAvBK,QAASC,EAAcN,EAAdM,UACrBC,EAAUT,EAAVS,MACFC,EAAQD,GAASA,EAAMC,MACzBC,EAAgB,GAkBpB,OAjBAA,EAAgBD,GAASP,EAAMS,QAAO,SAAAC,GAAS,IAAD,EACgDA,EAAKC,KAAKC,YAA5FC,EADkC,EAClCA,MAAOC,EAD2B,EAC3BA,WAAYC,EADe,EACfA,aAAcC,EADC,EACDA,SAAUC,EADT,EACSA,KAAsBC,EAD/B,EACeC,OAAUC,KAC3DC,EAASX,EAAKC,KAAdU,KACR,OACKR,GAASA,EAAMS,cAAcC,SAAShB,IACtCO,GAAcA,EAAWQ,cAAcC,SAAShB,IAChDQ,GAAgBA,EAAaO,cAAcC,SAAShB,IACpDc,GAAQA,EAAKC,cAAcC,SAAShB,IACpCW,GAAcA,EAAWI,cAAcC,SAAShB,IAChDS,GAAYA,EAASM,cAAcC,SAAShB,IAC5CU,GACGA,EACKO,KAAK,IACLF,cACAC,SAAShB,EAAMe,kBAI5B,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAKT,MAAK,gBAAiBN,GAAgB,MAC3C,kBAAC,IAAD,MACA,yBAAKkB,UAAU,gBACX,kBAAC1C,EAAD,KACI,kBAAC2C,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACxC,EAAD,KACI,kBAAC,IAASe,EAAV,uBAAwCG,EAAxC,KACA,kBAAC,IAAYJ,EAAb,eAAsCK,EAAgBA,EAAcsB,OAAS,IAEjF,kBAACvC,EAAD,KACKiB,GAAiBA,EAAcuB,KAAI,SAAAC,GAAI,OACpC,kBAAC,IAAD,iBACQ3B,EADR,CAEI4B,IAAKD,EAAKrB,KAAKuB,OAAOC,KACtBC,QAAO,iBACAJ,EAAKrB,KAAKuB,OADV,GAEAF,EAAKrB,KAAKC,YAFV,CAGHyB,QAASL,EAAKrB,KAAK0B,kBAMvC,kBAACT,EAAA,EAAD,CAAKC,GAAI,GACL,kBAACrC,EAAD,KACI,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,WAMpB,kBAAC,IAAD,OAEJ,kBAAC,IAAD,QAKCe,EAAK,aAoDlBZ,EAAe2C,aAAe,CAC1BlC,QAAS,CACLmC,GAAI,OACJC,GAAI,QAERrC,WAAY,CACRsC,GAAI,KACJC,MAAO,kBAEXrC,UAAW,CACPkC,GAAI,SAIG5C,a,qQCvJFgD,EAAc3D,IAAO4D,QAAV,uEAAG5D,CAAH,QAClB6D,KAGOC,EAAY9D,IAAOM,IAAV,qEAAGN,CAAH,sCAChBE,IAAOC,OAMA4D,EAAY/D,IAAOM,IAAV,qEAAGN,CAAH,qKAGhBE,IAAOC,MAKPD,IAAOE,OAIPF,IAAO8D,OAMAC,EAAcjE,IAAOM,IAAV,uEAAGN,CAAH,oPAGlBE,IAAOC,MAKPD,IAAOE,OAIPF,IAAO8D,OAMAE,EAAalE,IAAOmE,OAAV,sEAAGnE,CAAH,MAEVoE,EAAYpE,IAAOqE,GAAV,qEAAGrE,CAAH,wEASTsE,EAAetE,IAAOM,IAAV,wEAAGN,CAAH,yBAIZuE,EAAcvE,IAAOwE,EAAV,uEAAGxE,CAAH,yBAIXyE,EAAazE,IAAO0E,OAAV,sEAAG1E,CAAH,M,sICjDvB,IAAM2E,EAAO,SAAC,GAA6B,IAOxBC,EAAUC,EAPdzB,EAA2B,EAA3BA,QAAYrC,EAAe,iBAElCoC,EAGAC,EAHAD,KAAM2B,EAGN1B,EAHM0B,SAAU9C,EAGhBoB,EAHgBpB,SAAU+C,EAG1B3B,EAH0B2B,KAAMC,EAGhC5B,EAHgC4B,OAAQnD,EAGxCuB,EAHwCvB,MAAOoD,EAG/C7B,EAH+C6B,MAC/C5B,EAEAD,EAFAC,QAAS6B,EAET9B,EAFS8B,OAAQC,EAEjB/B,EAFiB+B,WAAYrD,EAE7BsB,EAF6BtB,WAAYC,EAEzCqB,EAFyCrB,aACzCqD,EACAhC,EADAgC,KAAMC,EACNjC,EADMiC,OAEHC,EAA0CvE,EAA1CuE,SAAUC,EAAgCxE,EAAhCwE,cAAkBC,EANG,EAMWzE,EANX,8BAQnCoE,IAECP,EADYO,EAAWM,MAAM,KAAM,GACd,GACrBZ,EAAgBM,EAAWM,MAAM,KAAK,IAXJ,MAaJC,oBAAS,GAApCC,EAb+B,KAapBC,EAboB,KAqBtC,OACI,kBAAC,WAAD,KACI,kBAACjC,EAAgB6B,EACb,kBAAC1B,EAAD,KACI,kBAACC,EAAD,MACiB,UAAXiB,GAAiC,aAAXA,IACpB,kBAAC,IAAD,CAAWa,KAAI,IAAM1C,EAAQ8B,MAAOA,EAAOpD,MAAOA,IAE1C,UAAXmD,GACG,kBAAC,IAAD,CACIc,QAjBL,WACnBF,GAAa,IAiBWG,OAAQd,EAAMe,gBAAgBC,MAC9BpE,MAAOA,IAGH,UAAXmD,GAAsB,kBAAC,IAAD,CAAOkB,KAAMpE,EAAYK,OAAQJ,IAC5C,SAAXiD,GAAqB,kBAAC,IAAD,CAAQI,KAAMA,IACxB,YAAXJ,GAAwB,kBAAC,IAAD,CAASK,OAAQA,KAE9C,kBAACpB,EAAD,KACI,kBAACC,EAAD,KACKlC,GAAY,kBAAC,IAAD,iBAAcuD,EAAd,CAA6BpC,KAAI,aAAegD,kBAAQnE,GAAakE,KAAMlE,KACvFH,GAAS,kBAACuC,EAAD,KAAW,kBAAC,OAAD,CAAMgC,GAAE,IAAMjD,GAAStB,IAC5C,kBAACyC,EAAD,KACKS,GACG,kBAAC,IAAD,KACI,kBAAC,OAAD,CAAMqB,GAAE,SAAWD,kBAAQrB,IAAcC,IAGjD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAe5B,KAAMA,EAAMtB,MAAOA,EAAOwE,GAAInB,OAIxD7B,GAAW,kBAACkB,EAAD,KAAclB,GAC1B,kBAACoB,EAAD,KACI,kBAAC,IAAD,iBAAYa,EAAZ,CAAsBgB,KAAM,kBAAC,IAAD,MAAmBF,GAAE,IAAMjD,IAAvD,iBAKhB,kBAAC,IAAD,CACIoD,QAAS1B,EACT2B,QAAS5B,EACT6B,OAAQd,EACRe,QAjDY,WACpBd,GAAa,QA0DrBjB,EAAKrB,aAAe,CAChBgC,SAAU,CACNqB,QAAS,UAEbpB,cAAe,CACXhC,GAAI,QAIGoB","file":"component---src-templates-search-template-search-template-js-d2e20ee2c503952970b6.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { WidgetBoxWrap } from '../../components/shared/widget-box/widget-box.stc'\r\nimport { device } from '../../theme'\r\n\r\nexport const SectionWrap = styled.section`\r\n    padding-top: 55px;\r\n    padding-bottom: 60px;\r\n    ${device.small}{\r\n        padding-top: 75px;\r\n        padding-bottom: 80px;\r\n    }\r\n    ${device.medium}{\r\n        padding-top: 95px;\r\n        padding-bottom: 100px;\r\n    }\r\n`;\r\n\r\nexport const PageHeader = styled.div`\r\n    margin-bottom: 36px;\r\n`;\r\n\r\nexport const BlogListWrap = styled.div``;\r\n\r\nexport const SidebarWrap = styled.aside`\r\n    ${WidgetBoxWrap}{\r\n        &:not(:last-child){\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport { Container, Row, Col } from 'reactstrap'\r\nimport SEO from \"../../components/seo\"\r\nimport Layout from \"../../containers/layout/layout\"\r\nimport Header from '../../containers/layout/header'\r\nimport Footer from '../../containers/layout/footer'\r\nimport Text from '../../components/shared/text'\r\nimport Heading from '../../components/shared/heading'\r\nimport Blog from '../../components/blog/layout-two'\r\nimport SearchWidget from '../../containers/widgets/search'\r\nimport RecentPostWidget from '../../containers/widgets/recent-post'\r\nimport InstagramWidget from '../../containers/widgets/instagram'\r\nimport CategoryWidget from '../../containers/widgets/categories'\r\nimport CTAWidget from '../../containers/widgets/cta'\r\nimport SubscribeWidget from '../../containers/widgets/subscribe'\r\nimport InstagramArea from '../../containers/global/instagram'\r\nimport { SectionWrap, PageHeader, BlogListWrap, SidebarWrap } from './search-template.stc'\r\n\r\nconst SearchTemplate = ({ data, pageContext, location, ...restProps }) => {\r\n    const blogs = data.allMarkdownRemark.edges || [];\r\n    const { headingCSS, textCSS, blogStyle } = restProps\r\n    const { state } = location;\r\n    const query = state && state.query\r\n    let filteredBlogs = [];\r\n    filteredBlogs = query && blogs.filter(post => {\r\n        const { title, quote_text, quote_author, category, tags, author: { name: authorName } } = post.node.frontmatter\r\n        const { html } = post.node\r\n        return (\r\n            (title && title.toLowerCase().includes(query)) ||\r\n            (quote_text && quote_text.toLowerCase().includes(query)) ||\r\n            (quote_author && quote_author.toLowerCase().includes(query)) ||\r\n            (html && html.toLowerCase().includes(query)) ||\r\n            (authorName && authorName.toLowerCase().includes(query)) ||\r\n            (category && category.toLowerCase().includes(query)) ||\r\n            (tags &&\r\n                tags\r\n                    .join(\"\")\r\n                    .toLowerCase()\r\n                    .includes(query.toLowerCase()))\r\n        )\r\n    })\r\n    return (\r\n        <Layout>\r\n            <SEO title={`Search For: ${query ? query : ''}`} />\r\n            <Header />\r\n            <div className=\"main-content\">\r\n                <SectionWrap>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xl={8}>\r\n                                <PageHeader>\r\n                                    <Text {...textCSS}>Search Results for \"{query}\"</Text>\r\n                                    <Heading {...headingCSS}>Post found: {filteredBlogs ? filteredBlogs.length : 0}</Heading>\r\n                                </PageHeader>\r\n                                <BlogListWrap>\r\n                                    {filteredBlogs && filteredBlogs.map(blog => (\r\n                                        <Blog\r\n                                            {...blogStyle}\r\n                                            key={blog.node.fields.slug}\r\n                                            content={{\r\n                                                ...blog.node.fields,\r\n                                                ...blog.node.frontmatter,\r\n                                                excerpt: blog.node.excerpt\r\n                                            }}\r\n                                        />\r\n                                    ))}\r\n                                </BlogListWrap>\r\n                            </Col>\r\n                            <Col xl={4}>\r\n                                <SidebarWrap>\r\n                                    <SearchWidget />\r\n                                    <RecentPostWidget />\r\n                                    <InstagramWidget />\r\n                                    <CategoryWidget />\r\n                                    <CTAWidget />\r\n                                    <SubscribeWidget />\r\n                                </SidebarWrap>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </SectionWrap>\r\n                <InstagramArea />\r\n            </div>\r\n            <Footer />\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const query = graphql`\r\n    query BlogBySearchQuery{\r\n        allMarkdownRemark(\r\n            sort: {fields: frontmatter___date, order: DESC}\r\n        ) {\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                        dateSlug\r\n                        postID\r\n                    }\r\n                    frontmatter {\r\n                        category\r\n                        tags\r\n                        date(formatString: \"LL\")\r\n                        format\r\n                        title\r\n                        video_link\r\n                        quote_text\r\n                        quote_author\r\n                        link\r\n                        author {\r\n                            name\r\n                        }\r\n                        image {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 510, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                    presentationWidth\r\n                                    presentationHeight\r\n                                }\r\n                            }\r\n                        }\r\n                        images {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 510, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                    presentationWidth\r\n                                    presentationHeight\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    excerpt(pruneLength: 165, format: PLAIN, truncate: true)\r\n                    html\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nSearchTemplate.defaultProps = {\r\n    textCSS: {\r\n        mb: '11px',\r\n        mt: '-4px'\r\n    },\r\n    headingCSS: {\r\n        as: 'h4',\r\n        color: 'secondaryColor'\r\n    },\r\n    blogStyle: {\r\n        mb: '30px'\r\n    }\r\n}\r\n\r\nexport default SearchTemplate\r\n","import styled from \"styled-components\";\r\nimport {space} from 'styled-system'\r\nimport {device} from '../../../theme'\r\n\r\nexport const BlogWrapper = styled.article `\r\n    ${space}\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n    ${device.small}{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const BlogMedia = styled.div `\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    ${device.small}{\r\n        flex-basis: 370px;\r\n        max-width: 370px;\r\n        margin-bottom: 0;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: 300px;\r\n        max-width: 300px;\r\n    }\r\n    ${device.large}{\r\n        flex-basis: 400px;\r\n        max-width: 400px;\r\n    }\r\n`;\r\n\r\nexport const BlogContent = styled.div `\r\n    width: 100%;\r\n    align-self: center;\r\n    ${device.small}{\r\n        flex-basis: calc(100% - 370px);\r\n        max-width: calc(100% - 370px);\r\n        padding-left: 30px;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: calc(100% - 300px);\r\n        max-width: calc(100% - 300px);\r\n    }\r\n    ${device.large}{\r\n        flex-basis: calc(100% - 400px);\r\n        max-width: calc(100% - 400px);\r\n    }\r\n`;\r\n\r\nexport const BlogHeader = styled.header ``;\r\n\r\nexport const BlogTitle = styled.h3 `\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n    a{\r\n        color: #0e1b47;\r\n    }\r\n`;\r\n\r\nexport const BlogMetaWrap = styled.div `\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const BlogExcerpt = styled.p `\r\n    margin-bottom: 18px;\r\n`;\r\n\r\nexport const BlogFooter = styled.footer ``;","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'gatsby'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport Button from '../../shared/button'\r\nimport {slugify} from '../../../utils/utilFunctions'\r\nimport BlogMeta, {Category, CommentNumber} from '../../blog/blog-meta'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner,\r\n    BlogMedia,\r\n    BlogContent,\r\n    BlogHeader,\r\n    BlogTitle,\r\n    BlogMetaWrap,\r\n    BlogExcerpt,\r\n    BlogFooter\r\n} from './blog.stc'\r\n  \r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, dateSlug, category, date, format, title, image, \r\n        excerpt, postID, video_link, quote_text, quote_author,\r\n        link, images\r\n    } = content;\r\n    const {btnStyle, categoryStyle, ...restStyles} = restProps;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n     \r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper {...restStyles}>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {(format === 'image' || format === 'standard') && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                        {format === 'quote' && <Quote text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        <BlogHeader> \r\n                            {category && <Category {...categoryStyle} slug={`/category/${slugify(category)}`} text={category}/>}\r\n                            {title && <BlogTitle><Link to={`/${slug}`}>{title}</Link></BlogTitle>}\r\n                            <BlogMetaWrap>\r\n                                {date && (\r\n                                    <BlogMeta>\r\n                                        <Link to={`/date/${slugify(dateSlug)}`}>{date}</Link>\r\n                                    </BlogMeta>\r\n                                )}\r\n                                <BlogMeta>\r\n                                    <CommentNumber slug={slug} title={title} id={postID}/>\r\n                                </BlogMeta>\r\n                            </BlogMetaWrap>\r\n                        </BlogHeader>\r\n                        {excerpt && <BlogExcerpt>{excerpt}</BlogExcerpt>}\r\n                        <BlogFooter>\r\n                            <Button {...btnStyle} icon={<FiChevronRight/>} to={`/${slug}`}>Read More</Button>\r\n                        </BlogFooter>\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    btnStyle: PropTypes.object\r\n}\r\n \r\nBlog.defaultProps = {\r\n    btnStyle: {\r\n        varient: \"texted\"\r\n    },\r\n    categoryStyle: {\r\n        mb: '7px'\r\n    }\r\n}\r\n\r\nexport default Blog\r\n"],"sourceRoot":""}