{"version":3,"sources":["webpack:///./src/components/blog/layout-two/blog.stc.js","webpack:///./src/components/blog/layout-two/index.js","webpack:///./src/templates/category-template/category-template.stc.js","webpack:///./src/templates/category-template/category-template.js"],"names":["BlogWrapper","styled","article","space","BlogInner","div","device","small","BlogMedia","medium","large","BlogContent","BlogHeader","header","BlogTitle","h3","BlogMetaWrap","BlogExcerpt","p","BlogFooter","footer","Blog","video_id","video_channel","content","restProps","slug","dateSlug","category","date","format","title","image","excerpt","postID","video_link","quote_text","quote_author","link","images","btnStyle","categoryStyle","restStyles","split","useState","videoOpen","setVideoOpen","path","onClick","poster","childImageSharp","fluid","text","author","slugify","to","id","icon","channel","videoId","isOpen","onClose","defaultProps","varient","mb","SectionWrap","section","PageHeader","BlogListWrap","SidebarWrap","aside","WidgetBoxWrap","CategoryTemplate","data","pageContext","location","blogs","allMarkdownRemark","edges","totalCount","categoryText","categoryHeading","blogStyle","className","Container","Row","Col","xl","map","blog","key","node","fields","frontmatter","query","textTransform","as","color"],"mappings":"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","file":"component---src-templates-category-template-category-template-js-46cdd55c19a097027c38.js","sourcesContent":["import styled from \"styled-components\";\r\nimport {space} from 'styled-system'\r\nimport {device} from '../../../theme'\r\n\r\nexport const BlogWrapper = styled.article `\r\n    ${space}\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n    ${device.small}{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const BlogMedia = styled.div `\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    ${device.small}{\r\n        flex-basis: 370px;\r\n        max-width: 370px;\r\n        margin-bottom: 0;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: 300px;\r\n        max-width: 300px;\r\n    }\r\n    ${device.large}{\r\n        flex-basis: 400px;\r\n        max-width: 400px;\r\n    }\r\n`;\r\n\r\nexport const BlogContent = styled.div `\r\n    width: 100%;\r\n    align-self: center;\r\n    ${device.small}{\r\n        flex-basis: calc(100% - 370px);\r\n        max-width: calc(100% - 370px);\r\n        padding-left: 30px;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: calc(100% - 300px);\r\n        max-width: calc(100% - 300px);\r\n    }\r\n    ${device.large}{\r\n        flex-basis: calc(100% - 400px);\r\n        max-width: calc(100% - 400px);\r\n    }\r\n`;\r\n\r\nexport const BlogHeader = styled.header ``;\r\n\r\nexport const BlogTitle = styled.h3 `\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n    a{\r\n        color: #0e1b47;\r\n    }\r\n`;\r\n\r\nexport const BlogMetaWrap = styled.div `\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const BlogExcerpt = styled.p `\r\n    margin-bottom: 18px;\r\n`;\r\n\r\nexport const BlogFooter = styled.footer ``;","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'gatsby'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport Button from '../../shared/button'\r\nimport {slugify} from '../../../utils/utilFunctions'\r\nimport BlogMeta, {Category, CommentNumber} from '../../blog/blog-meta'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner,\r\n    BlogMedia,\r\n    BlogContent,\r\n    BlogHeader,\r\n    BlogTitle,\r\n    BlogMetaWrap,\r\n    BlogExcerpt,\r\n    BlogFooter\r\n} from './blog.stc'\r\n  \r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, dateSlug, category, date, format, title, image, \r\n        excerpt, postID, video_link, quote_text, quote_author,\r\n        link, images\r\n    } = content;\r\n    const {btnStyle, categoryStyle, ...restStyles} = restProps;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n     \r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper {...restStyles}>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {(format === 'image' || format === 'standard') && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                        {format === 'quote' && <Quote text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        <BlogHeader> \r\n                            {category && <Category {...categoryStyle} slug={`/category/${slugify(category)}`} text={category}/>}\r\n                            {title && <BlogTitle><Link to={`/${slug}`}>{title}</Link></BlogTitle>}\r\n                            <BlogMetaWrap>\r\n                                {date && (\r\n                                    <BlogMeta>\r\n                                        <Link to={`/date/${slugify(dateSlug)}`}>{date}</Link>\r\n                                    </BlogMeta>\r\n                                )}\r\n                                <BlogMeta>\r\n                                    <CommentNumber slug={slug} title={title} id={postID}/>\r\n                                </BlogMeta>\r\n                            </BlogMetaWrap>\r\n                        </BlogHeader>\r\n                        {excerpt && <BlogExcerpt>{excerpt}</BlogExcerpt>}\r\n                        <BlogFooter>\r\n                            <Button {...btnStyle} icon={<FiChevronRight/>} to={`/${slug}`}>Read More</Button>\r\n                        </BlogFooter>\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    btnStyle: PropTypes.object\r\n}\r\n \r\nBlog.defaultProps = {\r\n    btnStyle: {\r\n        varient: \"texted\"\r\n    },\r\n    categoryStyle: {\r\n        mb: '7px'\r\n    }\r\n}\r\n\r\nexport default Blog\r\n","import styled from \"styled-components\";\r\nimport {WidgetBoxWrap} from '../../components/shared/widget-box/widget-box.stc'\r\nimport {device} from '../../theme'\r\n\r\nexport const SectionWrap = styled.section `\r\n    padding-top: 55px;\r\n    padding-bottom: 60px;\r\n    ${device.small}{\r\n        padding-top: 75px;\r\n        padding-bottom: 80px;\r\n    }\r\n    ${device.medium}{\r\n        padding-top: 95px;\r\n        padding-bottom: 69px;\r\n    }\r\n`;\r\n\r\nexport const PageHeader = styled.div `\r\n    margin-bottom: 36px;\r\n`;\r\n\r\nexport const BlogListWrap = styled.div ``;\r\n\r\nexport const SidebarWrap = styled.aside `\r\n    ${WidgetBoxWrap}{\r\n        &:not(:last-child){\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n`;","import React from 'react'\r\nimport {graphql} from 'gatsby'\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport SEO from \"../../components/seo\"\r\nimport Layout from \"../../containers/layout/layout\"\r\nimport Header from '../../containers/layout/header'\r\nimport Footer from '../../containers/layout/footer'\r\nimport Heading from '../../components/shared/heading'\r\nimport Text from '../../components/shared/text'\r\nimport Blog from '../../components/blog/layout-two'\r\nimport SearchWidget from '../../containers/widgets/search'\r\nimport RecentPostWidget from '../../containers/widgets/recent-post'\r\nimport InstagramWidget from '../../containers/widgets/instagram'\r\nimport CategoryWidget from '../../containers/widgets/categories'\r\nimport CTAWidget from '../../containers/widgets/cta'\r\nimport SubscribeWidget from '../../containers/widgets/subscribe'\r\nimport InstagramArea from '../../containers/global/instagram'\r\nimport {SectionWrap, PageHeader, BlogListWrap, SidebarWrap} from './category-template.stc'\r\n\r\nconst CategoryTemplate = ({ data, pageContext, location, ...restProps }) => {\r\n    const blogs = data.allMarkdownRemark.edges;\r\n    const {totalCount} = data.allMarkdownRemark;\r\n    const {category} = pageContext;\r\n    const {categoryText, categoryHeading, blogStyle} = restProps\r\n    return (\r\n        <Layout>\r\n            <SEO  title={`Category: ${category}`}/>\r\n            <Header/> \r\n            <div className=\"main-content\">\r\n                <SectionWrap>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col xl={8}>\r\n                                <PageHeader>\r\n                                    <Text {...categoryText}>{category}</Text>\r\n                                    <Heading {...categoryHeading}>A collection of {totalCount} post</Heading>\r\n                                </PageHeader>\r\n                                <BlogListWrap>\r\n                                    {blogs.map(blog => (\r\n                                        <Blog\r\n                                            {...blogStyle}\r\n                                            key={blog.node.fields.slug}\r\n                                            content={{\r\n                                                ...blog.node.fields, \r\n                                                ...blog.node.frontmatter,\r\n                                                excerpt: blog.node.excerpt\r\n                                            }}\r\n                                        />\r\n                                    ))}\r\n                                </BlogListWrap>\r\n                            </Col>\r\n                            <Col xl={4}>\r\n                                <SidebarWrap>\r\n                                    <SearchWidget/>\r\n                                    <RecentPostWidget/>\r\n                                    <InstagramWidget/>\r\n                                    <CategoryWidget/>\r\n                                    <CTAWidget/>\r\n                                    <SubscribeWidget/>\r\n                                </SidebarWrap>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </SectionWrap>\r\n                <InstagramArea/>\r\n            </div>\r\n            <Footer/>\r\n        </Layout>\r\n    )\r\n}\r\nexport const query = graphql `\r\n    query BlogByCategoryQuery($category: String!){\r\n        allMarkdownRemark(\r\n            sort: {fields: frontmatter___date, order: DESC}, \r\n            filter: {frontmatter: {category: {eq: $category}}}\r\n        ) {\r\n            totalCount\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                        dateSlug\r\n                        postID\r\n                    }\r\n                    frontmatter {\r\n                        category\r\n                        tags\r\n                        date(formatString: \"LL\") \r\n                        format\r\n                        title\r\n                        video_link\r\n                        quote_text\r\n                        quote_author\r\n                        link\r\n                        image {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 510, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                    presentationWidth\r\n                                    presentationHeight\r\n                                }\r\n                            }\r\n                        }\r\n                        images {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 510, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                    presentationWidth\r\n                                    presentationHeight\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    excerpt(pruneLength: 165, format: PLAIN, truncate: true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nCategoryTemplate.defaultProps = {\r\n    categoryText: {\r\n        textTransform: 'capitalize',\r\n        mb: '11px'\r\n    },\r\n    categoryHeading: {\r\n        as: 'h4',\r\n        color: 'secondaryColor'\r\n    },\r\n    blogStyle: {\r\n        mb: '30px'\r\n    }\r\n}\r\n\r\nexport default CategoryTemplate\r\n "],"sourceRoot":""}