{"version":3,"sources":["webpack:///./src/containers/widgets/feature-posts/feature-posts.stc.js","webpack:///./src/containers/widgets/feature-posts/index.js","webpack:///./src/containers/home/hero-area/hero-area.stc.js","webpack:///./src/containers/home/hero-area/index.js","webpack:///./src/containers/home/recet-post-area/react-post-area.stc.js","webpack:///./src/containers/home/recet-post-area/index.js","webpack:///./src/containers/home/recet-post-area/query.js","webpack:///./src/containers/home/main-area/main-area.stc.js","webpack:///./src/containers/home/main-area/index.js","webpack:///./src/pages/index.js","webpack:///./src/containers/global/sidebar/sidebar.stc.js","webpack:///./src/containers/global/sidebar/index.js","webpack:///./src/components/blog/layout-four/blog.stc.js","webpack:///./src/components/blog/layout-four/index.js"],"names":["FeaturePostItem","styled","div","themeGet","FeaturePostWrap","FeaturePosts","blogStyles","widgetStyle","blogs","allMarkdownRemark","edges","id","map","blog","key","node","fields","slug","content","frontmatter","title","truncateString","defaultProps","bg","color","border","boxCSS","layout","titleCSS","dateCSS","HeroWrapper","section","device","xsmall","small","xlarge","HeroBG","BackgroundImage","HeroArea","image","homeJson","fluid","childImageSharp","Container","Row","Col","md","lg","xl","className","RecenPostWrap","medium","LoadMoreBtnWrap","props","isLoading","css","Loading","RecentPostArea","allBlogs","initialBlogs","splice","useState","hasMore","setHasMore","currentShow","setCurrentShow","nextToShow","setNextToShow","loading","setLoading","hasMoreToLoad","blogsToLoad","length","blogStyle","loadMoreBtn","excerpt","disabled","onClick","setTimeout","nextBlogs","prev","icon","sectionTitleStyle","mb","btnsize","varient","shape","fontSize","letterSpacing","iconcss","pl","width","height","MainWrapper","main","MainArea","IndexPage","SidebarWrap","aside","WidgetBoxWrap","Sidebar","BlogWrapper","article","space","BlogInner","BlogMedia","BlogContent","BlogHeader","header","BlogTitle","h3","BlogCategory","Link","BlogExcerpt","p","BlogFooter","footer","BlogMetaWrap","BlogBtn","Blog","video_id","video_channel","restProps","dateSlug","category","date","format","postID","video_link","quote_text","quote_author","link","images","authorId","author","btnStyle","restStyles","categoryStyle","split","videoOpen","setVideoOpen","path","poster","text","to","slugify","name","channel","videoId","isOpen","onClose"],"mappings":"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","file":"component---src-pages-index-js-2c64cb46b58060c7158d.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const FeaturePostItem = styled.div`\r\n    padding-bottom: 15px;\r\n    padding-top: 15px;\r\n    border-bottom: 1px solid ${themeGet(\"colors.borderColor\")};\r\n`;\r\n\r\nexport const FeaturePostWrap = styled.div`\r\n    ${FeaturePostItem}{\r\n        &:first-child{\r\n            padding-top: 0;\r\n        }\r\n        &:last-child{\r\n            padding-bottom: 0;\r\n            border: none;\r\n        }\r\n        a{\r\n            &:hover{\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport WidgetBox, { WidgetTitle } from '../../../components/shared/widget-box'\r\nimport Blog from '../../../components/blog/layout-three'\r\nimport { truncateString } from '../../../utils/utilFunctions'\r\nimport { FeaturePostWrap, FeaturePostItem } from './feature-posts.stc'\r\n\r\nconst FeaturePosts = ({ blogStyles, widgetStyle }) => {\r\n    const featurePostData = useStaticQuery(graphql`\r\n        query FeaturePostQuery {\r\n            allMarkdownRemark(\r\n                filter: {frontmatter: {is_featured: {eq: true}}}, \r\n                sort: {order: DESC, fields: frontmatter___date}) {\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                            dateSlug\r\n                        }\r\n                        frontmatter {\r\n                            title\r\n                            format\r\n                            date(formatString: \"LL\")\r\n                            image {\r\n                                childImageSharp {\r\n                                    fixed(width: 78, height: 78, quality: 100) {\r\n                                        ...GatsbyImageSharpFixed_withWebp\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const blogs = featurePostData.allMarkdownRemark.edges;\r\n    return (\r\n        <WidgetBox {...widgetStyle} id=\"feature-post\">\r\n            <WidgetTitle>Featured Posts</WidgetTitle>\r\n            <FeaturePostWrap>\r\n                {blogs.map(blog => (\r\n                    <FeaturePostItem key={blog.node.fields.slug}>\r\n                        <Blog\r\n                            {...blogStyles}\r\n                            content={{\r\n                                ...blog.node.fields,\r\n                                ...blog.node.frontmatter,\r\n                                title: truncateString(blog.node.frontmatter.title, 30)\r\n                            }}\r\n                        />\r\n                    </FeaturePostItem>\r\n                ))}\r\n            </FeaturePostWrap>\r\n        </WidgetBox>\r\n    )\r\n}\r\n\r\nFeaturePosts.defaultProps = {\r\n    widgetStyle: {\r\n        bg: 'appricot',\r\n        color: '#fff',\r\n        border: 'none'\r\n    },\r\n    blogStyles: {\r\n        boxCSS: {\r\n            layout: 2\r\n        },\r\n        titleCSS: {\r\n            color: '#fff'\r\n        },\r\n        dateCSS: {\r\n            color: '#fff'\r\n        }\r\n    }\r\n}\r\n\r\nexport default FeaturePosts\r\n","import styled from 'styled-components';\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport {device} from '../../../theme'\r\n\r\nexport const HeroWrapper = styled.section `\r\n    height: 800px;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    ${device.xsmall}{\r\n        height: 600px;\r\n    }\r\n    ${device.small}{\r\n        height: 600px;\r\n    }\r\n    ${device.xlarge}{\r\n        height: 750px;\r\n    }\r\n`;\r\n\r\nexport const HeroBG = styled(BackgroundImage) `\r\n    position: absolute !important;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport FeaturePosts from '../../widgets/feature-posts'\r\nimport {HeroWrapper, HeroBG} from './hero-area.stc'\r\n\r\nconst HeroArea = () => {\r\n    const heroData = useStaticQuery(graphql `\r\n        query HomeHeroQuery {\r\n            homeJson(id: {eq: \"home-hero-content\"}){\r\n                title\r\n                desc\r\n                image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 1920, maxHeight: 750, quality: 100) {\r\n                            ...GatsbyImageSharpFluid_withWebp\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    `) \r\n    const {image} = heroData.homeJson;\r\n    return (\r\n        <HeroWrapper>\r\n            <HeroBG fluid={image.childImageSharp.fluid}/>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={8} lg={6} xl={4} className=\"ml-auto\">\r\n                        <FeaturePosts/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </HeroWrapper>\r\n    )\r\n}\r\n\r\nexport default HeroArea\r\n","import styled, {css} from 'styled-components'\r\nimport {Loading} from '../../../assets/css/animations'\r\nimport {device} from '../../../theme'\r\n\r\nexport const RecenPostWrap = styled.section `\r\n    margin-bottom: 50px;\r\n    ${device.medium}{\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const LoadMoreBtnWrap = styled.div `\r\n    ${props => props.isLoading && css `\r\n        button{\r\n            cursor: not-allowed;\r\n            opacity: .5;\r\n        }\r\n        svg {\r\n            animation: ${Loading} .5s linear 0s infinite;\r\n        }\r\n    `}\r\n`;","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Row, Col} from 'reactstrap'\r\nimport { FiLoader } from \"react-icons/fi\";\r\nimport useQuery from './query'\r\nimport Blog from '../../../components/blog/layout-four'\r\nimport Button from '../../../components/shared/button'\r\nimport {RecenPostWrap, LoadMoreBtnWrap} from './react-post-area.stc'\r\n \r\nconst RecentPostArea = (props) => {\r\n    const allBlogs = useQuery();\r\n    const initialBlogs = [...allBlogs].splice(0, 8);\r\n    const [hasMore, setHasMore] = useState(true);\r\n    const [currentShow, setCurrentShow] = useState(8)\r\n    const [nextToShow, setNextToShow] = useState([])\r\n    const [loading, setLoading] = useState(false);\r\n    \r\n    const blogWillShow = () => {\r\n        setLoading(true)\r\n        setTimeout(() => {\r\n            const nextBlogs = [...allBlogs].splice(currentShow, 2);\r\n            setCurrentShow(prev => prev + 2)\r\n            setNextToShow([...nextToShow, ...nextBlogs])\r\n            setLoading(false)\r\n        }, 3000)\r\n    }\r\n    const loadMoreHandler = () => {\r\n        blogWillShow()\r\n        hasMoreToLoad()\r\n    }\r\n\r\n    const hasMoreToLoad = () => {\r\n        const blogsToLoad = allBlogs.length - currentShow;\r\n        setHasMore(blogsToLoad === 0 ? false : true)\r\n    }\r\n    const {blogStyle, loadMoreBtn} = props;\r\n    return (\r\n        <RecenPostWrap>\r\n            <Row>\r\n                <Fragment>\r\n                    {initialBlogs.map(blog => (\r\n                        <Col key={blog.node.fields.slug} md={6}>\r\n                            <Blog\r\n                                {...blogStyle}\r\n                                content={{\r\n                                    ...blog.node.fields, \r\n                                    ...blog.node.frontmatter,\r\n                                    excerpt: blog.node.excerpt\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    ))}\r\n                    {nextToShow.map(blog => (\r\n                        <Col key={blog.node.fields.slug} md={6}>\r\n                            <Blog\r\n                                {...blogStyle}\r\n                                content={{\r\n                                    ...blog.node.fields, \r\n                                    ...blog.node.frontmatter\r\n                                }}\r\n                            />\r\n                        </Col>\r\n                    ))}\r\n                </Fragment>\r\n            </Row>\r\n            <Row>\r\n                <Col lg={12} className=\"text-center\">\r\n                    {hasMore && (\r\n                        <LoadMoreBtnWrap isLoading={loading}>\r\n                            <Button \r\n                                disabled={!hasMore} \r\n                                onClick={loadMoreHandler} \r\n                                {...loadMoreBtn} \r\n                                icon={<FiLoader/>}>Load More Article</Button>\r\n                        </LoadMoreBtnWrap>\r\n                    )}\r\n                    {!hasMore && <p>There is no more posts to show.</p>}\r\n                </Col>\r\n            </Row>\r\n        </RecenPostWrap>\r\n    )\r\n}\r\n\r\nRecentPostArea.propTypes = {\r\n    sectionTitleStyle: PropTypes.object,\r\n    blogStyle: PropTypes.object\r\n}\r\n\r\nRecentPostArea.defaultProps = {\r\n    sectionTitleStyle: {\r\n        mb: '46px'\r\n    },\r\n    blogStyle: {\r\n        mb: '50px'\r\n    },\r\n    loadMoreBtn: {\r\n        btnsize: 'large',\r\n        varient: 'contained',\r\n        shape: 'rounded',\r\n        fontSize: ['12px', null, null, '13px'],\r\n        letterSpacing: [0, null, null, '1px'],\r\n        iconcss: {\r\n            pl: '8px',\r\n            width: '14px',\r\n            height: '12px'\r\n        }\r\n    }\r\n}\r\n\r\nexport default RecentPostArea\r\n","import { useStaticQuery, graphql } from 'gatsby'\r\n\r\nexport default () => {\r\n    const blogData = useStaticQuery(graphql `\r\n        query RecentPostQuery {\r\n            allMarkdownRemark(sort: {order: DESC, fields: frontmatter___date}) {\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                            authorId\r\n                        }\r\n                        frontmatter {\r\n                            author {\r\n                                name\r\n                            }\r\n                            format\r\n                            title\r\n                            category\r\n                            video_link\r\n                            quote_text\r\n                            quote_author\r\n                            link\r\n                            image {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 510, maxHeight: 400, quality: 100, srcSetBreakpoints: 6) {\r\n                                        ...GatsbyImageSharpFluid_withWebp\r\n                                        presentationWidth\r\n                                        presentationHeight\r\n                                    }\r\n                                }\r\n                            }\r\n                            images {\r\n                                childImageSharp {\r\n                                    fluid(maxWidth: 510, maxHeight: 400, quality: 100, srcSetBreakpoints: 6) {\r\n                                        ...GatsbyImageSharpFluid_withWebp\r\n                                        presentationWidth\r\n                                        presentationHeight\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        excerpt(format: PLAIN, pruneLength: 85)\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    `);\r\n    const blogs = blogData.allMarkdownRemark.edges;\r\n    return blogs;\r\n}","import styled from \"styled-components\";\r\nimport {device} from '../../../theme'\r\n\r\nexport const MainWrapper = styled.main `\r\n    margin-top: 47px;\r\n    margin-bottom: 47px;\r\n    ${device.small}{\r\n        margin-top: 67px;\r\n        margin-bottom: 67px;\r\n    }\r\n    ${device.medium}{\r\n        margin-top: 100px;\r\n        margin-bottom: 100px;\r\n    }\r\n`;","import React from 'react'\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport RecentPostArea from '../recet-post-area'\r\nimport Siderbar from '../../global/sidebar'\r\nimport {MainWrapper} from './main-area.stc'\r\n\r\nconst MainArea = () => {\r\n    return (\r\n        <MainWrapper>\r\n            <Container>\r\n                <Row>\r\n                    <Col lg={8}>\r\n                        <RecentPostArea/>\r\n                    </Col>\r\n                    <Col lg={4}>\r\n                        <Siderbar/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </MainWrapper>\r\n    )\r\n}\r\n\r\nexport default MainArea\r\n","import React from \"react\"\r\nimport SEO from '../components/seo'\r\nimport Layout from \"../containers/layout/layout\"\r\nimport Header from '../containers/layout/header'\r\nimport Footer from '../containers/layout/footer'\r\nimport HeroArea from '../containers/home/hero-area'\r\nimport MainArea from '../containers/home/main-area'\r\nimport InstagramArea from '../containers/global/instagram'\r\n\r\nconst IndexPage = () => (\r\n  <Layout>\r\n    <SEO title=\"Home\" />\r\n    <Header/>\r\n    <div className=\"main-content\">\r\n      <HeroArea/>\r\n      <MainArea/>  \r\n      <InstagramArea/>   \r\n    </div>\r\n    <Footer/>\r\n  </Layout>\r\n)\r\n\r\nexport default IndexPage\r\n","import styled from \"styled-components\";\r\nimport {WidgetBoxWrap} from '../../../components/shared/widget-box/widget-box.stc'\r\n\r\nexport const SidebarWrap = styled.aside `\r\n    ${WidgetBoxWrap}{\r\n        &:not(:last-child){\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n`; ","import React from 'react'\r\nimport SearchWidget from '../../widgets/search'\r\nimport RecentPostWidget from '../../widgets/recent-post'\r\nimport InstagramWidget from '../../widgets/instagram'\r\nimport CategoriesWidget from '../../widgets/categories'\r\nimport CTAWidget from '../../widgets/cta'\r\nimport SubscribeWidget from '../../widgets/subscribe'\r\nimport {SidebarWrap} from './sidebar.stc'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <SidebarWrap>\r\n            <SearchWidget/>\r\n            <RecentPostWidget/>\r\n            <InstagramWidget/>\r\n            <CategoriesWidget/>\r\n            <CTAWidget/>\r\n            <SubscribeWidget/>\r\n        </SidebarWrap>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n ","import styled from \"styled-components\";\r\nimport {space} from 'styled-system'\r\nimport {themeGet} from '@styled-system/theme-get'\r\nimport {Link} from 'gatsby'\r\n\r\nexport const BlogWrapper = styled.article `\r\n    ${space}\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n\r\n`;\r\n\r\nexport const BlogMedia = styled.div `\r\n    margin-bottom: 22px;\r\n    position: relative;\r\n`;\r\n\r\nexport const BlogContent = styled.div `\r\n\r\n`;\r\n\r\nexport const BlogHeader = styled.header `\r\n    margin-bottom: 5px;\r\n`;\r\n\r\nexport const BlogTitle = styled.h3 `\r\n    font-size: 16px;\r\n    font-weight: 600;\r\n    margin-top: 5px;\r\n    a{\r\n        color: ${themeGet(\"colors.headingColor\")};\r\n    }\r\n`;\r\n\r\nexport const BlogCategory = styled(Link) `\r\n    position: absolute;\r\n    left: 25px;\r\n    top: 25px;\r\n    display: inline-block;\r\n    color: #fff;\r\n    text-transform: capitalize;\r\n    border: 2px solid #fff;\r\n    height: 30px;\r\n    min-width: 104px;\r\n    border-radius: 35px;\r\n    line-height: 26px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    z-index: 9;\r\n    &:hover{\r\n        color: #fff;\r\n    }\r\n`;\r\n\r\nexport const BlogExcerpt = styled.p `\r\n    margin-bottom: 18px;\r\n`;\r\n\r\nexport const BlogFooter = styled.footer `\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    flex-wrap: wrap;\r\n    border-top: 1px dashed ${themeGet(\"colors.borderColor\")};\r\n    padding-top: 10px;\r\n`;\r\n\r\nexport const BlogMetaWrap = styled.div `\r\n    margin-top: 4px;\r\n    a{\r\n        color: ${themeGet(\"colors.gray\")}\r\n    }\r\n`;\r\n\r\nexport const BlogBtn = styled.div `\r\n    margin-top: 4px;\r\n`; ","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'gatsby'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport Button from '../../shared/button'\r\nimport {slugify} from '../../../utils/utilFunctions'\r\nimport BlogMeta, {Category, CommentNumber} from '../../blog/blog-meta'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {truncateString} from '../../../utils/utilFunctions'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner,\r\n    BlogMedia,\r\n    BlogContent,\r\n    BlogHeader,\r\n    BlogCategory,\r\n    BlogTitle,\r\n    BlogMetaWrap,\r\n    BlogExcerpt,\r\n    BlogFooter,\r\n    BlogBtn\r\n} from './blog.stc'\r\n  \r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, dateSlug, category, date, format, title, image, \r\n        excerpt, postID, video_link, quote_text, quote_author,\r\n        link, images, authorId, author\r\n    } = content;\r\n    const {btnStyle, categoryStyle, ...restStyles} = restProps;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n      \r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper {...restStyles}>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {format === 'image' && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )} \r\n                        {format === 'quote' && <Quote layout={2} text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked layout={2} link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                        {(format === 'image' || format === 'video' || format === 'gallery') && category && (\r\n                            <BlogCategory to={`/category/${slugify(category)}`}>{category}</BlogCategory>\r\n                        )}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        <BlogHeader> \r\n                            {(format === 'quote' || format === 'link') && category && (\r\n                                <Category slug={`/category/${slugify(category)}`} text={category}/>\r\n                            )}\r\n                            {title && <BlogTitle><Link to={`/${slug}`}>{truncateString(title, 30)}</Link></BlogTitle>}\r\n                        </BlogHeader>\r\n                            {excerpt && <BlogExcerpt>{excerpt}</BlogExcerpt>}\r\n                        <BlogFooter>\r\n                            <BlogMetaWrap>\r\n                                {date && (\r\n                                    <BlogMeta>\r\n                                        <Link to={`/date/${slugify(dateSlug)}`}>{date}</Link>\r\n                                    </BlogMeta>\r\n                                )}\r\n                                {author && (\r\n                                    <BlogMeta>\r\n                                        <Link to={`/author/${slugify(authorId)}`}>{author.name}</Link>\r\n                                    </BlogMeta>\r\n                                )}\r\n                                <BlogMeta>\r\n                                    <CommentNumber slug={slug} title={title} id={postID}/>\r\n                                </BlogMeta>\r\n                            </BlogMetaWrap>\r\n                            <BlogBtn>\r\n                                <Button {...btnStyle} icon={<FiChevronRight/>} to={`/${slug}`}>Read More</Button>\r\n                            </BlogBtn>\r\n                        </BlogFooter>\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    btnStyle: PropTypes.object\r\n}\r\n \r\nBlog.defaultProps = {\r\n    btnStyle: {\r\n        varient: \"texted\",\r\n        color: \"gray\"\r\n    },\r\n    categoryStyle: {\r\n        mb: '7px'\r\n    }\r\n}\r\n\r\nexport default Blog\r\n"],"sourceRoot":""}