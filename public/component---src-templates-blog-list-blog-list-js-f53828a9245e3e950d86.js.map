{"version":3,"sources":["webpack:///./src/components/shared/section-title/section-title.stc.js","webpack:///./src/components/shared/section-title/index.js","webpack:///./src/components/blog/layout-two/blog.stc.js","webpack:///./src/components/blog/layout-two/index.js","webpack:///./src/components/pagination/pagination.stc.js","webpack:///./src/components/pagination/index.js","webpack:///./src/templates/blog-list/blog-list.stc.js","webpack:///./src/templates/blog-list/blog-list.js","webpack:///./src/containers/widgets/feature-posts/feature-posts.stc.js","webpack:///./src/containers/widgets/feature-posts/index.js","webpack:///./src/containers/home/hero-area/hero-area.stc.js","webpack:///./src/containers/home/hero-area/index.js","webpack:///./src/containers/global/sidebar/sidebar.stc.js","webpack:///./src/containers/global/sidebar/index.js"],"names":["SectionTitleWrap","styled","div","space","layout","themeGet","SectionTitle","title","subtitle","props","dangerouslySetInnerHTML","__html","defaultProps","align","BlogWrapper","article","BlogInner","device","small","BlogMedia","medium","large","BlogContent","BlogHeader","header","BlogTitle","h3","BlogMetaWrap","BlogExcerpt","p","BlogFooter","footer","Blog","video_id","video_channel","content","restProps","slug","dateSlug","category","date","format","image","excerpt","postID","video_link","quote_text","quote_author","link","images","btnStyle","categoryStyle","restStyles","split","useState","videoOpen","setVideoOpen","path","onClick","poster","childImageSharp","fluid","text","author","slugify","to","id","icon","channel","videoId","isOpen","onClose","varient","mb","PaginationWrap","PaginationList","ul","PaginationItem","li","disabled","css","PaginationLink","Anchor","active","Pagination","currentPage","numberOfPages","rootPage","isFirst","isLast","previousPage","toString","nextPage","className","Array","from","length","_","i","key","MainWrapper","main","RecenPostWrap","section","RecentPostContent","BlogList","data","pageContext","location","sectionTitleStyle","blogStyle","blogs","allMarkdownRemark","edges","transparent","Container","Row","Col","lg","map","blog","node","fields","frontmatter","query","FeaturePostItem","FeaturePostWrap","FeaturePosts","blogStyles","widgetStyle","truncateString","bg","color","border","boxCSS","titleCSS","dateCSS","HeroWrapper","xsmall","xlarge","HeroBG","BackgroundImage","HeroArea","homeJson","md","xl","SidebarWrap","aside","WidgetBoxWrap","Sidebar"],"mappings":"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","file":"component---src-templates-blog-list-blog-list-js-f53828a9245e3e950d86.js","sourcesContent":["import styled from 'styled-components'\nimport { space, layout } from 'styled-system'\nimport { themeGet } from '@styled-system/theme-get';\n\nexport const SectionTitleWrap = styled.div `\n    ${space}\n    ${layout}\n    h3{\n        font-size: 24px;\n        text-transform: uppercase;\n        position: relative;\n        &:after{\n            position: absolute;\n            content: \"\";\n            left: 2px;\n            bottom: 4px;\n            width: 120px;\n            height: 20px;\n            z-index: -1;\n            background-color: ${themeGet(\"colors.themeColor\")};\n        }\n    }\n`;","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {SectionTitleWrap} from './section-title.stc'\n\nconst SectionTitle = ({title, subtitle, ...props}) => {\n    return (\n        <SectionTitleWrap {...props}>\n            {title && <h3 dangerouslySetInnerHTML={{ __html: title}} />}\n            {subtitle && <h6>{subtitle}</h6>}\n        </SectionTitleWrap>\n    )\n}\n\nSectionTitle.propTypes = {\n    align: PropTypes.oneOf(['left', 'center', 'right']),\n    mb: PropTypes.string\n}\n\nSectionTitle.defaultProps = {\n    align: 'left'\n}\nexport default SectionTitle;","import styled from \"styled-components\";\r\nimport {space} from 'styled-system'\r\nimport {device} from '../../../theme'\r\n\r\nexport const BlogWrapper = styled.article `\r\n    ${space}\r\n`;\r\n\r\nexport const BlogInner = styled.div `\r\n    ${device.small}{\r\n        display: flex;\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nexport const BlogMedia = styled.div `\r\n    width: 100%;\r\n    margin-bottom: 20px;\r\n    ${device.small}{\r\n        flex-basis: 370px;\r\n        max-width: 370px;\r\n        margin-bottom: 0;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: 300px;\r\n        max-width: 300px;\r\n    }\r\n    ${device.large}{\r\n        flex-basis: 400px;\r\n        max-width: 400px;\r\n    }\r\n`;\r\n\r\nexport const BlogContent = styled.div `\r\n    width: 100%;\r\n    align-self: center;\r\n    ${device.small}{\r\n        flex-basis: calc(100% - 370px);\r\n        max-width: calc(100% - 370px);\r\n        padding-left: 30px;\r\n    }\r\n    ${device.medium}{\r\n        flex-basis: calc(100% - 300px);\r\n        max-width: calc(100% - 300px);\r\n    }\r\n    ${device.large}{\r\n        flex-basis: calc(100% - 400px);\r\n        max-width: calc(100% - 400px);\r\n    }\r\n`;\r\n\r\nexport const BlogHeader = styled.header ``;\r\n\r\nexport const BlogTitle = styled.h3 `\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    margin-bottom: 4px;\r\n    a{\r\n        color: #0e1b47;\r\n    }\r\n`;\r\n\r\nexport const BlogMetaWrap = styled.div `\r\n    margin-bottom: 20px;\r\n`;\r\n\r\nexport const BlogExcerpt = styled.p `\r\n    margin-bottom: 18px;\r\n`;\r\n\r\nexport const BlogFooter = styled.footer ``;","import React, {Fragment, useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'gatsby'\r\nimport { FiChevronRight } from \"react-icons/fi\";\r\nimport Button from '../../shared/button'\r\nimport {slugify} from '../../../utils/utilFunctions'\r\nimport BlogMeta, {Category, CommentNumber} from '../../blog/blog-meta'\r\nimport ModalVideo from '../../shared/modal-video'\r\nimport {Thumbnail, Video, Quote, Linked, Gallery} from '../blog-media'\r\nimport {\r\n    BlogWrapper,\r\n    BlogInner,\r\n    BlogMedia,\r\n    BlogContent,\r\n    BlogHeader,\r\n    BlogTitle,\r\n    BlogMetaWrap,\r\n    BlogExcerpt,\r\n    BlogFooter\r\n} from './blog.stc'\r\n  \r\nconst Blog = ({content, ...restProps}) => {\r\n    const {\r\n        slug, dateSlug, category, date, format, title, image, \r\n        excerpt, postID, video_link, quote_text, quote_author,\r\n        link, images\r\n    } = content;\r\n    const {btnStyle, categoryStyle, ...restStyles} = restProps;\r\n    let video_arr, video_id, video_channel;\r\n    if(video_link){\r\n        video_arr = video_link.split('=', -1);\r\n        video_id = video_arr[1];\r\n        video_channel = video_link.split(\".\")[1];\r\n    }\r\n    const [videoOpen, setVideoOpen] = useState(false);\r\n    const modalVideoOpen = () => {\r\n        setVideoOpen(true)\r\n    }\r\n    const modalVideoClose = () => {\r\n        setVideoOpen(false)\r\n    }\r\n     \r\n    return (\r\n        <Fragment>\r\n            <BlogWrapper {...restStyles}>\r\n                <BlogInner>\r\n                    <BlogMedia>\r\n                        {(format === 'image' || format === 'standard') && (\r\n                            <Thumbnail path={`/${slug}`} image={image} title={title}/>\r\n                        )}\r\n                        {format === 'video' && (\r\n                            <Video\r\n                                onClick={modalVideoOpen}\r\n                                poster={image.childImageSharp.fluid}\r\n                                title={title}\r\n                            />\r\n                        )}\r\n                        {format === 'quote' && <Quote text={quote_text} author={quote_author}/>}\r\n                        {format === 'link' && <Linked link={link}/>}\r\n                        {format === 'gallery' && <Gallery images={images}/>}\r\n                    </BlogMedia>\r\n                    <BlogContent>\r\n                        <BlogHeader> \r\n                            {category && <Category {...categoryStyle} slug={`/category/${slugify(category)}`} text={category}/>}\r\n                            {title && <BlogTitle><Link to={`/${slug}`}>{title}</Link></BlogTitle>}\r\n                            <BlogMetaWrap>\r\n                                {date && (\r\n                                    <BlogMeta>\r\n                                        <Link to={`/date/${slugify(dateSlug)}`}>{date}</Link>\r\n                                    </BlogMeta>\r\n                                )}\r\n                                <BlogMeta>\r\n                                    <CommentNumber slug={slug} title={title} id={postID}/>\r\n                                </BlogMeta>\r\n                            </BlogMetaWrap>\r\n                        </BlogHeader>\r\n                        {excerpt && <BlogExcerpt>{excerpt}</BlogExcerpt>}\r\n                        <BlogFooter>\r\n                            <Button {...btnStyle} icon={<FiChevronRight/>} to={`/${slug}`}>Read More</Button>\r\n                        </BlogFooter>\r\n                    </BlogContent>\r\n                </BlogInner>\r\n            </BlogWrapper>\r\n            <ModalVideo\r\n                channel={video_channel}\r\n                videoId={video_id}\r\n                isOpen={videoOpen}\r\n                onClose={modalVideoClose}\r\n            />\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nBlog.propTypes = {\r\n    btnStyle: PropTypes.object\r\n}\r\n \r\nBlog.defaultProps = {\r\n    btnStyle: {\r\n        varient: \"texted\"\r\n    },\r\n    categoryStyle: {\r\n        mb: '7px'\r\n    }\r\n}\r\n\r\nexport default Blog\r\n","import styled, { css } from 'styled-components';\r\nimport Anchor from '../shared/anchor'\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const PaginationWrap = styled.div`\r\n    position: relative;\r\n`;\r\n\r\nexport const PaginationList = styled.ul`\r\n    list-style: none;\r\n    padding: 0;\r\n    margin: 0;\r\n    display: flex;\r\n`;\r\n\r\nexport const PaginationItem = styled.li`\r\n    &:not(:last-child){\r\n        margin-right: 8px;\r\n    }\r\n    ${props => props.disabled && css`\r\n        display: none;\r\n    `}\r\n`;\r\n\r\nexport const PaginationLink = styled(Anchor)`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    min-width: 50px;\r\n    min-height: 48px;\r\n    line-height: 48px;\r\n    border-radius: 3px;\r\n    border: 1px solid ${themeGet('colors.borderColor')};\r\n    color: ${themeGet('colors.silver')};\r\n    text-align: center;\r\n    font-size: ${themeGet('fontSize.text')};\r\n    font-weight: ${themeGet('fontWeights.medium')};\r\n    &:hover{\r\n        color: ${themeGet('colors.hoverColor')};\r\n        border-color: ${themeGet('colors.hoverColor')};\r\n    }\r\n    ${props => props.active && css`\r\n        color: ${themeGet('colors.headingColor')};\r\n        border-color: ${themeGet('colors.hoverColor')};\r\n        background-color: ${themeGet('colors.hoverColor')};\r\n        &:hover{\r\n            color: ${themeGet('colors.headingColor')};\r\n            border-color: ${themeGet('colors.hoverColor')};\r\n        }\r\n    `}\r\n    &.prev,\r\n    &.next{\r\n        padding: 0 20px;\r\n    }\r\n    svg{\r\n        width: 18px;\r\n        height: 18px;\r\n    }\r\n`;","import React from 'react';\r\nimport { FiChevronLeft, FiChevronRight } from \"react-icons/fi\";\r\nimport { PaginationWrap, PaginationList, PaginationItem, PaginationLink } from './pagination.stc'\r\n\r\nconst Pagination = ({ currentPage, numberOfPages, rootPage }) => {\r\n    const isFirst = currentPage === 1;\r\n    const isLast = currentPage === numberOfPages;\r\n    const previousPage = currentPage - 1 === 1 ? rootPage : '/page/' + (currentPage - 1).toString();\r\n    const nextPage = '/page/' + (currentPage + 1).toString();\r\n    return (\r\n        <PaginationWrap>\r\n            <PaginationList>\r\n                {isFirst ? (\r\n                    <PaginationItem disabled={true}>\r\n                        <PaginationLink className=\"prev\" path={previousPage}>\r\n                            <FiChevronLeft />\r\n                            <span>Prev</span>\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                        <PaginationItem>\r\n                            <PaginationLink className=\"prev\" path={previousPage}>\r\n                                <FiChevronLeft />\r\n                                <span>Prev</span>\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n                {Array.from({ length: numberOfPages }, (_, i) => currentPage === i + 1 ? (\r\n                    <PaginationItem key={`page-number-${i + 1}`} id={`page-number-${i + 1}`}>\r\n                        <PaginationLink active=\"true\" path={`${i === 0 ? '' : '/page/' + (i + 1)}`}>\r\n                            {i + 1}\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                        <PaginationItem key={`page-number-${i + 1}`} id={`page-number-${i + 1}`}>\r\n                            <PaginationLink path={`${i === 0 ? rootPage : '/page/' + (i + 1)}`}>\r\n                                {i + 1}\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    ))}\r\n                {isLast ? (\r\n                    <PaginationItem disabled={true}>\r\n                        <PaginationLink className=\"next\" path={nextPage}>\r\n                            <span>Next</span>\r\n                            <FiChevronRight />\r\n                        </PaginationLink>\r\n                    </PaginationItem>\r\n                ) : (\r\n                        <PaginationItem>\r\n                            <PaginationLink className=\"next\" path={nextPage}>\r\n                                <span>Next</span>\r\n                                <FiChevronRight />\r\n                            </PaginationLink>\r\n                        </PaginationItem>\r\n                    )}\r\n            </PaginationList>\r\n        </PaginationWrap>\r\n    )\r\n}\r\n\r\nexport default Pagination;","import styled from \"styled-components\";\r\nimport {device} from '../../theme'\r\n\r\nexport const MainWrapper = styled.main `\r\n    margin-bottom: 47px;\r\n    ${device.small}{\r\n        margin-bottom: 67px;\r\n    }\r\n    ${device.medium}{\r\n        margin-bottom: 100px;\r\n    }\r\n`;\r\n\r\nexport const RecenPostWrap = styled.section `\r\n    margin-bottom: 50px;\r\n    ${device.medium}{\r\n        margin-bottom: 0;\r\n    }\r\n`;\r\n\r\nexport const RecentPostContent = styled.div `\r\n    \r\n`;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Container, Row, Col} from 'reactstrap'\r\nimport {graphql} from 'gatsby'\r\nimport SEO from '../../components/seo'\r\nimport Layout from \"../../containers/layout/layout\"\r\nimport Header from '../../containers/layout/header'\r\nimport Footer from '../../containers/layout/footer'\r\nimport HeroArea from '../../containers/home/hero-area'\r\nimport Siderbar from '../../containers/global/sidebar'\r\nimport InstagramArea from '../../containers/global/instagram'\r\nimport SectionTitle from '../../components/shared/section-title'\r\nimport Blog from '../../components/blog/layout-two'\r\nimport Pagination from '../../components/pagination'\r\nimport {MainWrapper, RecenPostWrap, RecentPostContent} from './blog-list.stc'\r\n\r\nconst BlogList = ({ data, pageContext, location, ...restProps }) => {\r\n    const {sectionTitleStyle, blogStyle} = restProps;\r\n    const blogs = data.allMarkdownRemark.edges;\r\n    const {currentPage, numberOfPages} = pageContext;\r\n    return (\r\n        <Layout>\r\n            <SEO title={`Blog Page: ${currentPage}`} />\r\n            <Header transparent/>\r\n            <div className=\"main-content\">\r\n                <HeroArea/>\r\n                <MainWrapper>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col lg={8}>\r\n                            <RecenPostWrap>\r\n                                <SectionTitle\r\n                                    {...sectionTitleStyle}\r\n                                    title=\"Most Recent Post\"\r\n                                />\r\n                                <RecentPostContent>\r\n                                    {blogs.map(blog => (\r\n                                        <Blog\r\n                                            {...blogStyle}\r\n                                            key={blog.node.fields.slug}\r\n                                            content={{\r\n                                                ...blog.node.fields, \r\n                                                ...blog.node.frontmatter,\r\n                                                excerpt: blog.node.excerpt\r\n                                            }}\r\n                                        />\r\n                                    ))}\r\n                                </RecentPostContent>\r\n                                <Pagination\r\n                                    rootPage=\"/\"\r\n                                    currentPage={currentPage}\r\n                                    numberOfPages={numberOfPages}\r\n                                />\r\n                            </RecenPostWrap>\r\n                            </Col>\r\n                            <Col lg={4}>\r\n                                <Siderbar/>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </MainWrapper>   \r\n                <InstagramArea/>     \r\n            </div>\r\n            <Footer/>\r\n        </Layout> \r\n    )\r\n}\r\n  \r\nexport const query = graphql `\r\n    query BlogListQuery($skip: Int!, $limit: Int!){\r\n        allMarkdownRemark(\r\n        sort: {fields: frontmatter___date, order: DESC}, \r\n        limit: $limit, \r\n        skip: $skip) {\r\n            edges {\r\n                node {\r\n                    fields {\r\n                        slug\r\n                        dateSlug\r\n                        postID\r\n                    }\r\n                    frontmatter {\r\n                        category\r\n                        date(formatString: \"LL\")\r\n                        format\r\n                        tags\r\n                        title\r\n                        video_link\r\n                        quote_text\r\n                        quote_author\r\n                        link\r\n                        images {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 510, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                    presentationWidth\r\n                                    presentationHeight\r\n                                }\r\n                            }\r\n                        }\r\n                        image {\r\n                            childImageSharp {\r\n                                fluid(maxWidth: 510, maxHeight: 350, quality: 100, srcSetBreakpoints: 6) {\r\n                                    ...GatsbyImageSharpFluid_withWebp\r\n                                    presentationWidth\r\n                                    presentationHeight\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    excerpt(pruneLength: 165, format: PLAIN, truncate: true)\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nBlogList.propTypes = {\r\n    sectionTitleStyle: PropTypes.object,\r\n    blogStyle: PropTypes.object\r\n}\r\n\r\nBlogList.defaultProps = {\r\n    sectionTitleStyle: {\r\n        mb: '46px'\r\n    },\r\n    blogStyle: {\r\n        mb: '50px'\r\n    }\r\n}\r\n\r\nexport default BlogList\r\n","import styled from \"styled-components\";\r\nimport { themeGet } from '@styled-system/theme-get';\r\n\r\nexport const FeaturePostItem = styled.div`\r\n    padding-bottom: 15px;\r\n    padding-top: 15px;\r\n    border-bottom: 1px solid ${themeGet(\"colors.borderColor\")};\r\n`;\r\n\r\nexport const FeaturePostWrap = styled.div`\r\n    ${FeaturePostItem}{\r\n        &:first-child{\r\n            padding-top: 0;\r\n        }\r\n        &:last-child{\r\n            padding-bottom: 0;\r\n            border: none;\r\n        }\r\n        a{\r\n            &:hover{\r\n                color: #fff;\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n","import React from 'react'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport WidgetBox, { WidgetTitle } from '../../../components/shared/widget-box'\r\nimport Blog from '../../../components/blog/layout-three'\r\nimport { truncateString } from '../../../utils/utilFunctions'\r\nimport { FeaturePostWrap, FeaturePostItem } from './feature-posts.stc'\r\n\r\nconst FeaturePosts = ({ blogStyles, widgetStyle }) => {\r\n    const featurePostData = useStaticQuery(graphql`\r\n        query FeaturePostQuery {\r\n            allMarkdownRemark(\r\n                filter: {frontmatter: {is_featured: {eq: true}}}, \r\n                sort: {order: DESC, fields: frontmatter___date}) {\r\n                edges {\r\n                    node {\r\n                        fields {\r\n                            slug\r\n                            dateSlug\r\n                        }\r\n                        frontmatter {\r\n                            title\r\n                            format\r\n                            date(formatString: \"LL\")\r\n                            image {\r\n                                childImageSharp {\r\n                                    fixed(width: 78, height: 78, quality: 100) {\r\n                                        ...GatsbyImageSharpFixed_withWebp\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    `)\r\n    const blogs = featurePostData.allMarkdownRemark.edges;\r\n    return (\r\n        <WidgetBox {...widgetStyle} id=\"feature-post\">\r\n            <WidgetTitle>Featured Posts</WidgetTitle>\r\n            <FeaturePostWrap>\r\n                {blogs.map(blog => (\r\n                    <FeaturePostItem key={blog.node.fields.slug}>\r\n                        <Blog\r\n                            {...blogStyles}\r\n                            content={{\r\n                                ...blog.node.fields,\r\n                                ...blog.node.frontmatter,\r\n                                title: truncateString(blog.node.frontmatter.title, 30)\r\n                            }}\r\n                        />\r\n                    </FeaturePostItem>\r\n                ))}\r\n            </FeaturePostWrap>\r\n        </WidgetBox>\r\n    )\r\n}\r\n\r\nFeaturePosts.defaultProps = {\r\n    widgetStyle: {\r\n        bg: 'appricot',\r\n        color: '#fff',\r\n        border: 'none'\r\n    },\r\n    blogStyles: {\r\n        boxCSS: {\r\n            layout: 2\r\n        },\r\n        titleCSS: {\r\n            color: '#fff'\r\n        },\r\n        dateCSS: {\r\n            color: '#fff'\r\n        }\r\n    }\r\n}\r\n\r\nexport default FeaturePosts\r\n","import styled from 'styled-components';\r\nimport BackgroundImage from 'gatsby-background-image'\r\nimport {device} from '../../../theme'\r\n\r\nexport const HeroWrapper = styled.section `\r\n    height: 800px;\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n    ${device.xsmall}{\r\n        height: 600px;\r\n    }\r\n    ${device.small}{\r\n        height: 600px;\r\n    }\r\n    ${device.xlarge}{\r\n        height: 750px;\r\n    }\r\n`;\r\n\r\nexport const HeroBG = styled(BackgroundImage) `\r\n    position: absolute !important;\r\n    left: 0;\r\n    top: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n`;\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'reactstrap';\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\nimport FeaturePosts from '../../widgets/feature-posts'\r\nimport {HeroWrapper, HeroBG} from './hero-area.stc'\r\n\r\nconst HeroArea = () => {\r\n    const heroData = useStaticQuery(graphql `\r\n        query HomeHeroQuery {\r\n            homeJson(id: {eq: \"home-hero-content\"}){\r\n                title\r\n                desc\r\n                image {\r\n                    childImageSharp {\r\n                        fluid(maxWidth: 1920, maxHeight: 750, quality: 100) {\r\n                            ...GatsbyImageSharpFluid_withWebp\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }      \r\n    `) \r\n    const {image} = heroData.homeJson;\r\n    return (\r\n        <HeroWrapper>\r\n            <HeroBG fluid={image.childImageSharp.fluid}/>\r\n            <Container>\r\n                <Row>\r\n                    <Col md={8} lg={6} xl={4} className=\"ml-auto\">\r\n                        <FeaturePosts/>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </HeroWrapper>\r\n    )\r\n}\r\n\r\nexport default HeroArea\r\n","import styled from \"styled-components\";\r\nimport {WidgetBoxWrap} from '../../../components/shared/widget-box/widget-box.stc'\r\n\r\nexport const SidebarWrap = styled.aside `\r\n    ${WidgetBoxWrap}{\r\n        &:not(:last-child){\r\n            margin-bottom: 30px;\r\n        }\r\n    }\r\n`; ","import React from 'react'\r\nimport SearchWidget from '../../widgets/search'\r\nimport RecentPostWidget from '../../widgets/recent-post'\r\nimport InstagramWidget from '../../widgets/instagram'\r\nimport CategoriesWidget from '../../widgets/categories'\r\nimport CTAWidget from '../../widgets/cta'\r\nimport SubscribeWidget from '../../widgets/subscribe'\r\nimport {SidebarWrap} from './sidebar.stc'\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n        <SidebarWrap>\r\n            <SearchWidget/>\r\n            <RecentPostWidget/>\r\n            <InstagramWidget/>\r\n            <CategoriesWidget/>\r\n            <CTAWidget/>\r\n            <SubscribeWidget/>\r\n        </SidebarWrap>\r\n    )\r\n}\r\n\r\nexport default Sidebar\r\n "],"sourceRoot":""}